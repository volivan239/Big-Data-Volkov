function e(e){let t=()=>e();return t.unsubscribe=t,t}function t(e){let{node:t}=e;return r(t)}function r(e){let{meta:t,id:r}=e,n=(e=>e.config?e.config.loc:e.loc)(t),{sid:o,name:a,op:i}=t;return{meta:t,id:r,sid:o,name:a,kind:i,loc:n,derived:t.derived}}function n(e){let r=[],n=e.parent;for(;n;)r.push({type:'update',value:n.value,stack:n.meta||{},...t(n)}),n=n.parent;return r}function o(e){if(!e)return;let{parent:t,meta:r,id:n}=e,a=o(t)||void 0;if('factory'===r.type){let{sid:e,name:t,loc:o,method:i}=r;return{type:'factory',id:n,region:a,meta:r,sid:e,name:t,loc:o,method:i}}return{type:'region',id:n,region:a,meta:r}}Object.defineProperty(exports,'__esModule',{value:1});var effector=require('effector');const a=new Set;effector.setInspector(((e,r)=>{let{scope:o}=e;a.forEach((a=>{a.scope!==o&&(a.scope||o)||a.fn({type:r.fail?'error':'update',value:e.value,error:r.fail?r.failReason:void 0,stack:e.meta||{},trace:a.trace?n(e):[],...t(e)})}))}));const i=new Set;effector.setGraphInspector(((e,t)=>{let n;n='region'===e?o(t):((e,t)=>{let n=r(e);return{type:'unit',region:o(t),...n}})(e,t),n&&i.forEach((e=>{e.fn(n)}))})),exports.inspect=t=>(a.add(t),e((()=>{a.delete(t)}))),exports.inspectGraph=t=>(i.add(t),e((()=>{i.delete(t)})));
//# sourceMappingURL=inspect.js.map
